name: CI

on:
  workflow_dispatch:
    types: [rebuild]
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.ci-skip-step.outputs.ci-skip }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: ci-skip-step
        uses: mstachniuk/ci-skip@master
        with:
          commit-filter: '[ci skip];[ci-skip];[skip ci];[skip-ci]'
          commit-filter-separator: ';'

  test:
    needs: init
    if: ${{ needs.init.outputs.skip == 'false' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions

      - name: Linting
        run: |
          tox -e lint

      - name: Testing
        run: |
          tox
        env:
          PLATFORM: ubuntu-latest

  regenerate:
    # TODO: needs to be checked, esp. `github.ref` in case of workflow_dispatch
    # The branch or tag ref that triggered the workflow. For example, refs/heads/feature-branch-1. If neither a branch or tag is available for the event type, the variable will not exist.
    if: ((github.event_name == 'workflow_dispatch' && github.event.action == 'rebuild') || github.event_name == 'push') && github.ref == 'refs/heads/master'
    needs: test
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      # TODO: print sha where we're coming from if workflow dispatch?
      - name: Get the triggering event
        run: |
          echo "${{ github.event_name }} ${{ github.event.action }}"
      - uses: actions/checkout@v2
        with:
          # TODO: https://github.com/stefanzweifel/git-auto-commit-action#example  will this work with WD?
          ref: ${{ github.head_ref }}
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions

      - name: Regenerate documentation
        run:
          tox -e docs
        env:
          PLATFORM: ubuntu-latest

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          # changes from auto-commit will not trigger another workflow, [ci skip] is for safety reasons
          commit_message: '[ci skip] [auto] Regenerate tutorials/examples'
          file_pattern: docs/source/auto_* docs/source/gen_modules/backreferences/*
          commit_user_name: 'CI'
          skip_dirty_check: true

      - name: Request documentation rebuild
        # TODO: if docs are always built on the main repo, remove success() and uncomment otherwise keep as it is
        if: success()  # steps.auto-commit-action.outputs.changes_detected == 'true'
        run: |
          echo "TODO: request doc rebuild..."
          # TODO: update the secrets
          # curl -X POST -d "branches=master" -d "token=${{ secrets.RTD_TOKEN }}" "${{ secrets.RTD_WEBHOOK }}"
